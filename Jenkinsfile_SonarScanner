pipeline {
    agent any

    tools {
        maven 'mvn'
    }

    environment {
        SONAR_TOKEN = credentials('sonarqube-token')
    }

    stages {
   stage('Dependency Check') {
            steps {
            sh '''
            mkdir -p dependency-check-report
            docker run --rm
            -v $PWD:/src
            -v $PWD/dependency-check-report:/report
            owasp/dependency-check:latest
            --project "DevOpsBuildToolDemo"
            --format HTML
            --format XML
            --scan /src
            --out /report
            '''
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonarqube-server') {
                    sh '''
                        mvn clean verify sonar:sonar \
                        -Dsonar.login=$SONAR_TOKEN \
                        -Dsonar.dependencyCheck.reportPath=dependency-check-report/dependency-check-report.xml
                    '''
                }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }


}
